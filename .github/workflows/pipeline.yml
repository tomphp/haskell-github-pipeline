name: Pipeline
on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  test-actions:
    uses: ./.github/workflows/test-actions.yml

  build:
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: '9.0.2'
          enable-stack: true
          stack-version: latest
      - name: Run Tests
        run: stack test
      - name: Build
        run: stack build
      - name: Rename the binary to ${{ matrix.binary }}
        run: ${{ matrix.prepare }} ${{ matrix.binary }}
      - name: Store binary
        uses: actions/upload-artifact@v3
        with:
          name: bins
          path: ${{ matrix.binary }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            prepare: cp "$(stack exec -- which haskell-github-pipeline-exe)"
            binary: haskell-github-pipeline-x86_64-apple-darwin
          - os: ubuntu-latest
            prepare: cp "$(stack exec -- which haskell-github-pipeline-exe)"
            binary: haskell-github-pipeline-x86_64-linux
          - os: windows-latest
            prepare: cp "$(stack exec -- where haskell-github-pipeline-exe.exe)"
            binary: haskell-github-pipeline-x86_64-windows.exe

  verify-next-version:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - test-actions
    outputs:
      next-version: ${{ steps.get-next-version.outputs.next-version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get Next Version
        id: get-current-version
        uses: tomphp/haskell-github-pipeline/.github/actions/get-current-version@main
      - name: Install Uplift
        uses: gembaadvantage/uplift-action@v2
        with:
          version: latest
          install-only: true
          args: version
      - name: Get Next Version
        id: get-next-version
        uses: tomphp/haskell-github-pipeline/.github/actions/get-next-version@main
      - name: Print Current Version
        shell: bash
        run: echo ${{ steps.get-current-version.outputs.current-version }}
      - name: Print Next Version
        shell: bash
        run: echo ${{ steps.get-next-version.outputs.next-version }}

  tag-release:
    if: github.ref == 'refs/heads/main' && needs.verify-next-version.outputs.next-version != ''
    needs:
      - build
      - verify-next-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install uplift
        uses: gembaadvantage/uplift-action@v2
        with:
          version: latest
          install-only: true
          args: version
      - name: Tag Release
        uses: tomphp/haskell-github-pipeline/.github/actions/tag-release@main
        with:
          expected_version: ${{ needs.verify-next-version.outputs.next-version }}
      - name: Push Commit
        run: git push origin "${GITHUB_REF##*/}"
      - name: Push Tag
        run: git push origin "${{ needs.verify-next-version.outputs.next-version }}"

  upload-release:
    needs:
      - tag-release
      - verify-next-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout the repository
        with:
          lfs: true
          fetch-depth: 0
          ref: ${{ needs.verify-next-version.outputs.next-version }}
      - name: Retrieve assets
        uses: actions/download-artifact@v3
      - uses: dlavrenuek/conventional-changelog-action@v1.2.1
        id: changelog
        with:
          from: ${{ needs.verify-next-version.outputs.current-version }}
          to: ${{ needs.verify-next-version.outputs.next-version }}
      - name: Upload GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: ncipollo/release-action@v1.10.0
        with:
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.changelog.outputs.body }}
          name: Release ${{ needs.verify-next-version.outputs.next-version }}
          tag: ${{ needs.verify-next-version.outputs.next-version }}
          artifacts: ./bins/*