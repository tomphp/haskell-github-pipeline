name: Pipeline
on:
  push:
    branches:
      - '*'
  pull_request:
jobs:
  build:
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: '9.0.2'
          enable-stack: true
          stack-version: latest
      - name: Run Tests
        run: stack test
      - name: Build
        run: stack build
      - name: Rename the binary to ${{ matrix.binary }}
        run: ${{ matrix.prepare }} ${{ matrix.binary }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            prepare: mv "$(stack exec -- which haskell-github-pipeline-exe)"
            binary: haskell-github-pipeline-x86_64-apple-darwin
          - os: ubuntu-latest
            prepare: mv "$(stack exec -- which haskell-github-pipeline-exe)"
            binary: haskell-github-pipeline-x86_64-unknown-linux-gnu
          - os: windows-latest
            prepare: mv "$(stack exec -- which haskell-github-pipeline.exe)"
            binary: haskell-github-pipeline-x86_64-pc-windows-msvc.exe

  verify-next-version:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/head/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Uplift
        uses: gembaadvantage/uplift-action@v2
        with:
          version: latest
          install-only: true
          args: version
      - name: Run Uplift Dry Run
        run: uplift release --dry-run